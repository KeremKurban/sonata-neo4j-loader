[build-system]
requires = ["setuptools"]

[project]
name = "sonata_to_neo4j"
authors = [
    {name = "Kerem Kurban", email = "keremkurban@hotmail.com"},
]
description = "A tool to convert SONATA circuit and simulation data to Neo4j database format."
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
    "neo4j>=4.3.6",
    "pandas>=1.3.3",
    "bluepysnap>=0.9.0",
    "libsonata>=0.1.0",
    "pydantic>=1.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.6.1",
    "black",
    "mypy",
    "ruff",
    "bandit[toml]",
]

[tool.setuptools.dynamic]
version = {attr = "sonata_to_neo4j.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.bandit]
exclude_dirs = ["tests"]

[tool.black]
line-length = 88
preview = true

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.mypy]
mypy_path = "src"
python_version = "3.8"
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
plugins = [
  "pydantic.mypy"
]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
minversion = "6.0"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore:Use get_feature_values:DeprecationWarning",
    "ignore:Mean of empty slice:RuntimeWarning",
    "ignore:Degrees of freedom:RuntimeWarning",
    "ignore:Exception ignored in:pytest.PytestUnraisableExceptionWarning",
]

addopts = "--cov=src/ -v --cov-report=term-missing --durations=20 --no-cov-on-fail"